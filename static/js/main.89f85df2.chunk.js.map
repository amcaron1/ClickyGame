{"version":3,"sources":["components/FriendCard/FriendCard.js","components/Wrapper/Wrapper.js","components/Title/Title.js","components/Counter/Counter.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","className","alt","name","src","image","onClick","jumbleFriends","id","Wrapper","children","Title","Counter","App","state","friends","count","friendsCopy","Object","toConsumableArray","clicked","_this","setState","i","length","newIndex","temp","Math","floor","random","_this2","this","components_Wrapper_Wrapper","components_Title_Title","components_Counter_Counter","map","friend","components_FriendCard_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"koFAceA,SAXI,SAAAC,GAAK,OACtBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKL,EAAMM,KAAMC,IAAKP,EAAMQ,SAEnCP,EAAAC,EAAAC,cAAA,QAAMM,QAAS,kBAAMT,EAAMU,cAAcV,EAAMW,KAAKP,UAAU,UAA9D,mBCHWQ,SAFC,SAAAZ,GAAK,OAAIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWJ,EAAMa,YCE1CC,SAFD,SAAAd,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAASJ,EAAMa,YCGrCE,SAFG,SAAAf,GAAK,OAAIC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WAAWJ,EAAMa,mBCsE3CG,6MAhEbC,MAAQ,CACNC,UACAC,MAAO,KAGTT,cAAgB,SAAAC,GACd,IAAIS,EAAWC,OAAAC,EAAA,EAAAD,CAAOH,GAGtB,GAAIE,EAAYT,GAAIY,QAAS,CAG3BC,EAAKC,SAAS,CAAEN,MAAO,IAGvB,IAAK,IAAIO,EAAI,EAAGA,EAAIN,EAAYO,OAAQD,IACtCN,EAAYM,GAAGH,SAAU,OAK3BC,EAAKC,SAAS,CAAEN,MAAOK,EAAKP,MAAME,MAAQ,IAC1CC,EAAYT,GAAIY,SAAU,EAQ5B,IALA,IAAIK,EAAW,EACXC,EAAO,GAIFH,EAAI,EAAGA,EAAIN,EAAYO,OAAQD,IAEtCG,EAAOT,EADPQ,EAAWE,KAAKC,MAAMD,KAAKE,SAAWZ,EAAYO,SAElDP,EAAYQ,GAAYR,EAAYM,GACpCN,EAAYQ,GAAUjB,GAAKiB,EAC3BR,EAAYM,GAAKG,EACjBT,EAAYM,GAAGf,GAAKe,EAItBF,EAAKC,SAAS,CAAEP,QAASE,6EAIlB,IAAAa,EAAAC,KACP,OACEjC,EAAAC,EAAAC,cAACgC,EAAD,KACIlC,EAAAC,EAAAC,cAACiC,EAAD,oBACAnC,EAAAC,EAAAC,cAACkC,EAAD,eAAiBH,KAAKjB,MAAME,OAC7Be,KAAKjB,MAAMC,QAAQoB,IAAI,SAAAC,GAAM,OAC5BtC,EAAAC,EAAAC,cAACqC,EAAD,CACE9B,cAAeuB,EAAKvB,cACpBC,GAAI4B,EAAO5B,GACX8B,IAAKF,EAAO5B,GACZL,KAAMiC,EAAOjC,KACbE,MAAO+B,EAAO/B,MACde,QAASgB,EAAOhB,oBA3DVmB,aCHlBC,IAASC,OAAO3C,EAAAC,EAAAC,cAAC0C,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.89f85df2.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./FriendCard.css\";\n\nconst FriendCard = props => (\n  <div className=\"card\">\n    <div className=\"img-container\">\n      <img alt={props.name} src={props.image} />\n    </div>\n    <span onClick={() => props.jumbleFriends(props.id)} className=\"jumble\">\n      ùòÖ\n    </span>\n  </div>\n);\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./Wrapper.css\";\n\nconst Wrapper = props => <div className=\"wrapper\">{props.children}</div>;\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./Title.css\";\n\nconst Title = props => <h3 className=\"title\">{props.children}</h3>;\n\nexport default Title;\n","import React from \"react\";\nimport \"./Counter.css\";\n\n  // The render method returns the JSX that should be rendered\n  const Counter = props => <h5 className=\"counter\">{props.children}</h5>;\n \nexport default Counter;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Counter from \"./components/Counter\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  // Setting this.state.friends to the friends json array\n  // and this.state.count to zero\n  state = {\n    friends,\n    count: 0\n  };\n\n  jumbleFriends = id => {\n    let friendsCopy = [...friends];\n\n    // If this friend has been previously clicked, restart the game\n    if (friendsCopy[id].clicked) {\n\n      // Reset the count\n      this.setState({ count: 0 });\n      \n      // Reset the clicked values of all of the friends to false\n      for (let i = 0; i < friendsCopy.length; i++) {\n        friendsCopy[i].clicked = false;\n      }\n    }\n    // Else increment the count and set the clicked value of this friend to true\n    else {\n      this.setState({ count: this.state.count + 1 });\n      friendsCopy[id].clicked = true;\n    }\n\n    let newIndex = 0;\n    let temp = {};\n    \n    \n    // Jumble the friends array\n    for (let i = 0; i < friendsCopy.length; i++) {\n      newIndex = Math.floor(Math.random() * friendsCopy.length);\n      temp = friendsCopy[newIndex];\n      friendsCopy[newIndex] = friendsCopy[i];\n      friendsCopy[newIndex].id = newIndex;\n      friendsCopy[i] = temp;\n      friendsCopy[i].id = i;\n    }\n\n    // Reset the state of friends\n    this.setState({ friends: friendsCopy });\n  };\n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n          <Title>Clicky Game</Title>\n          <Counter>Count: {this.state.count}</Counter>\n        {this.state.friends.map(friend => (\n          <FriendCard\n            jumbleFriends={this.jumbleFriends}\n            id={friend.id}\n            key={friend.id}\n            name={friend.name}\n            image={friend.image}\n            clicked={friend.clicked}\n          />\n        ))}\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}